{"ast":null,"code":"import http from \"../http-common\";\n\nclass LocationDataService {\n  getAll() {\n    return http.get(\"/locations\");\n  }\n\n  get(location_id) {\n    return http.get(`/locations/${location_id}`, {\n      headers: authHeader()\n    });\n  }\n\n  create(data) {\n    return http.post(\"/locations\", data, {\n      headers: authHeader()\n    });\n  }\n\n  update(location_id, data) {\n    return http.put(`/locations/${location_id}`, data, {\n      headers: authHeader()\n    });\n  }\n\n  delete(location_id) {\n    return http.delete(`/locations/${location_id}`, {\n      headers: authHeader()\n    });\n  }\n\n  findByLocationName(location_name) {\n    return http.get(`/locations?location_name=${location_name}`, {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new LocationDataService();","map":{"version":3,"sources":["G:/commonwealth-backend/commonwealth-frontend/src/services/location.service.js"],"names":["http","LocationDataService","getAll","get","location_id","headers","authHeader","create","data","post","update","put","delete","findByLocationName","location_name"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,mBAAN,CAA0B;AACxBC,EAAAA,MAAM,GAAG;AACP,WAAOF,IAAI,CAACG,GAAL,CAAS,YAAT,CAAP;AACD;;AAEDA,EAAAA,GAAG,CAACC,WAAD,EAAc;AACf,WAAOJ,IAAI,CAACG,GAAL,CAAU,cAAaC,WAAY,EAAnC,EAAsC;AAAEC,MAAAA,OAAO,EAAEC,UAAU;AAArB,KAAtC,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,WAAOR,IAAI,CAACS,IAAL,CAAU,YAAV,EAAwBD,IAAxB,EAA8B;AAAEH,MAAAA,OAAO,EAAEC,UAAU;AAArB,KAA9B,CAAP;AACD;;AAEDI,EAAAA,MAAM,CAACN,WAAD,EAAcI,IAAd,EAAoB;AACxB,WAAOR,IAAI,CAACW,GAAL,CAAU,cAAaP,WAAY,EAAnC,EAAsCI,IAAtC,EAA4C;AAAEH,MAAAA,OAAO,EAAEC,UAAU;AAArB,KAA5C,CAAP;AACD;;AAEDM,EAAAA,MAAM,CAACR,WAAD,EAAc;AAClB,WAAOJ,IAAI,CAACY,MAAL,CAAa,cAAaR,WAAY,EAAtC,EAAyC;AAAEC,MAAAA,OAAO,EAAEC,UAAU;AAArB,KAAzC,CAAP;AACD;;AAEDO,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAChC,WAAOd,IAAI,CAACG,GAAL,CAAU,4BAA2BW,aAAc,EAAnD,EAAsD;AAAET,MAAAA,OAAO,EAAEC,UAAU;AAArB,KAAtD,CAAP;AACD;;AAvBuB;;AA0B1B,eAAe,IAAIL,mBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\r\n\r\nclass LocationDataService {\r\n  getAll() {\r\n    return http.get(\"/locations\");\r\n  }\r\n\r\n  get(location_id) {\r\n    return http.get(`/locations/${location_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/locations\", data, { headers: authHeader() });\r\n  }\r\n\r\n  update(location_id, data) {\r\n    return http.put(`/locations/${location_id}`, data, { headers: authHeader() });\r\n  }\r\n\r\n  delete(location_id) {\r\n    return http.delete(`/locations/${location_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  findByLocationName(location_name) {\r\n    return http.get(`/locations?location_name=${location_name}`, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new LocationDataService();"]},"metadata":{},"sourceType":"module"}
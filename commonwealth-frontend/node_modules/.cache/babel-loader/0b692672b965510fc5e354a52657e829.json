{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nimport http from \"../http-common\"; //const API_URL = 'https://the-drumian-commonwealth.herokuapp.com/api/test/';\n\nconst API_URL = \"/api/test/\";\n\nclass UserDataService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all', {\n      headers: authHeader()\n    });\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {\n      headers: authHeader()\n    });\n  } //==============================//\n\n\n  getAll() {\n    return http.get(\"/users\", {\n      headers: authHeader()\n    });\n  }\n\n  get(user_id) {\n    return http.get(`/users/${user_id}`, {\n      headers: authHeader()\n    });\n  }\n\n  create(data) {\n    return http.post(\"/users\", data, {\n      headers: authHeader()\n    });\n  }\n\n  update(user_id, data) {\n    return http.put(`/users/${user_id}`, data, {\n      headers: authHeader()\n    });\n  }\n\n  delete(user_id) {\n    return http.delete(`/users/${user_id}`, {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new UserDataService();","map":{"version":3,"sources":["G:/commonwealth-backend/commonwealth-frontend/src/services/user.service.js"],"names":["axios","authHeader","http","API_URL","UserDataService","getPublicContent","get","headers","getUserBoard","getModeratorBoard","getAdminBoard","getAll","user_id","create","data","post","update","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,YAAhB;;AAEA,MAAMC,eAAN,CAAsB;AACpBC,EAAAA,gBAAgB,GAAG;AACjB,WAAOL,KAAK,CAACM,GAAN,CAAUH,OAAO,GAAG,KAApB,EAA2B;AAAEI,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA3B,CAAP;AACD;;AAEDO,EAAAA,YAAY,GAAG;AACb,WAAOR,KAAK,CAACM,GAAN,CAAUH,OAAO,GAAG,MAApB,EAA4B;AAAEI,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA5B,CAAP;AACD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,WAAOT,KAAK,CAACM,GAAN,CAAUH,OAAO,GAAG,KAApB,EAA2B;AAAEI,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA3B,CAAP;AACD;;AAEDS,EAAAA,aAAa,GAAG;AACd,WAAOV,KAAK,CAACM,GAAN,CAAUH,OAAO,GAAG,OAApB,EAA6B;AAAEI,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA7B,CAAP;AACD,GAfmB,CAiBpB;;;AAEAU,EAAAA,MAAM,GAAG;AACP,WAAOT,IAAI,CAACI,GAAL,CAAS,QAAT,EAAmB;AAAEC,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAAnB,CAAP;AACD;;AAEDK,EAAAA,GAAG,CAACM,OAAD,EAAU;AACX,WAAOV,IAAI,CAACI,GAAL,CAAU,UAASM,OAAQ,EAA3B,EAA8B;AAAEL,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA9B,CAAP;AACD;;AAEDY,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,WAAOZ,IAAI,CAACa,IAAL,CAAU,QAAV,EAAoBD,IAApB,EAA0B;AAAEP,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA1B,CAAP;AACD;;AAEDe,EAAAA,MAAM,CAACJ,OAAD,EAAUE,IAAV,EAAgB;AACpB,WAAOZ,IAAI,CAACe,GAAL,CAAU,UAASL,OAAQ,EAA3B,EAA8BE,IAA9B,EAAoC;AAAEP,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAApC,CAAP;AACD;;AAEDiB,EAAAA,MAAM,CAACN,OAAD,EAAU;AACd,WAAOV,IAAI,CAACgB,MAAL,CAAa,UAASN,OAAQ,EAA9B,EAAiC;AAAEL,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAAjC,CAAP;AACD;;AArCmB;;AAwCtB,eAAe,IAAIG,eAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nimport http from \"../http-common\";\r\n\r\n//const API_URL = 'https://the-drumian-commonwealth.herokuapp.com/api/test/';\r\nconst API_URL = \"/api/test/\";\r\n\r\nclass UserDataService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all', { headers: authHeader() });\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  //==============================//\r\n\r\n  getAll() {\r\n    return http.get(\"/users\", { headers: authHeader() });\r\n  }\r\n\r\n  get(user_id) {\r\n    return http.get(`/users/${user_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/users\", data, { headers: authHeader() });\r\n  }\r\n\r\n  update(user_id, data) {\r\n    return http.put(`/users/${user_id}`, data, { headers: authHeader() });\r\n  }\r\n\r\n  delete(user_id) {\r\n    return http.delete(`/users/${user_id}`, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserDataService();"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"G:/commonwealth-backend/commonwealth-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"G:/commonwealth-backend/commonwealth-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';import authHeader from'./auth-header';import http from\"../http-common\";var API_URL='https://the-drumian-commonwealth.herokuapp.com/api/test/';//const API_URL = \"/api/test/\";\nvar UserDataService=/*#__PURE__*/function(){function UserDataService(){_classCallCheck(this,UserDataService);}_createClass(UserDataService,[{key:\"getPublicContent\",value:function getPublicContent(){return axios.get(API_URL+'all',{headers:authHeader()});}},{key:\"getUserBoard\",value:function getUserBoard(){return axios.get(API_URL+'user',{headers:authHeader()});}},{key:\"getModeratorBoard\",value:function getModeratorBoard(){return axios.get(API_URL+'mod',{headers:authHeader()});}},{key:\"getAdminBoard\",value:function getAdminBoard(){return axios.get(API_URL+'admin',{headers:authHeader()});}//==============================//\n},{key:\"getAll\",value:function getAll(){return http.get(\"/users\",{headers:authHeader()});}},{key:\"get\",value:function get(user_id){return http.get(\"/users/\".concat(user_id),{headers:authHeader()});}},{key:\"create\",value:function create(data){return http.post(\"/users\",data,{headers:authHeader()});}},{key:\"update\",value:function update(user_id,data){return http.put(\"/users/\".concat(user_id),data,{headers:authHeader()});}},{key:\"delete\",value:function _delete(user_id){return http.delete(\"/users/\".concat(user_id),{headers:authHeader()});}}]);return UserDataService;}();export default new UserDataService();","map":{"version":3,"sources":["G:/commonwealth-backend/commonwealth-frontend/src/services/user.service.js"],"names":["axios","authHeader","http","API_URL","UserDataService","get","headers","user_id","data","post","put","delete"],"mappings":"sUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CAEA,GAAMC,CAAAA,OAAO,CAAG,0DAAhB,CACA;GAEMC,CAAAA,e,kLACe,CACjB,MAAOJ,CAAAA,KAAK,CAACK,GAAN,CAAUF,OAAO,CAAG,KAApB,CAA2B,CAAEG,OAAO,CAAEL,UAAU,EAArB,CAA3B,CAAP,CACD,C,mDAEc,CACb,MAAOD,CAAAA,KAAK,CAACK,GAAN,CAAUF,OAAO,CAAG,MAApB,CAA4B,CAAEG,OAAO,CAAEL,UAAU,EAArB,CAA5B,CAAP,CACD,C,6DAEmB,CAClB,MAAOD,CAAAA,KAAK,CAACK,GAAN,CAAUF,OAAO,CAAG,KAApB,CAA2B,CAAEG,OAAO,CAAEL,UAAU,EAArB,CAA3B,CAAP,CACD,C,qDAEe,CACd,MAAOD,CAAAA,KAAK,CAACK,GAAN,CAAUF,OAAO,CAAG,OAApB,CAA6B,CAAEG,OAAO,CAAEL,UAAU,EAArB,CAA7B,CAAP,CACD,CAED;uCAES,CACP,MAAOC,CAAAA,IAAI,CAACG,GAAL,CAAS,QAAT,CAAmB,CAAEC,OAAO,CAAEL,UAAU,EAArB,CAAnB,CAAP,CACD,C,gCAEGM,O,CAAS,CACX,MAAOL,CAAAA,IAAI,CAACG,GAAL,kBAAmBE,OAAnB,EAA8B,CAAED,OAAO,CAAEL,UAAU,EAArB,CAA9B,CAAP,CACD,C,sCAEMO,I,CAAM,CACX,MAAON,CAAAA,IAAI,CAACO,IAAL,CAAU,QAAV,CAAoBD,IAApB,CAA0B,CAAEF,OAAO,CAAEL,UAAU,EAArB,CAA1B,CAAP,CACD,C,sCAEMM,O,CAASC,I,CAAM,CACpB,MAAON,CAAAA,IAAI,CAACQ,GAAL,kBAAmBH,OAAnB,EAA8BC,IAA9B,CAAoC,CAAEF,OAAO,CAAEL,UAAU,EAArB,CAApC,CAAP,CACD,C,uCAEMM,O,CAAS,CACd,MAAOL,CAAAA,IAAI,CAACS,MAAL,kBAAsBJ,OAAtB,EAAiC,CAAED,OAAO,CAAEL,UAAU,EAArB,CAAjC,CAAP,CACD,C,+BAGH,cAAe,IAAIG,CAAAA,eAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nimport http from \"../http-common\";\r\n\r\nconst API_URL = 'https://the-drumian-commonwealth.herokuapp.com/api/test/';\r\n//const API_URL = \"/api/test/\";\r\n\r\nclass UserDataService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all', { headers: authHeader() });\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  //==============================//\r\n\r\n  getAll() {\r\n    return http.get(\"/users\", { headers: authHeader() });\r\n  }\r\n\r\n  get(user_id) {\r\n    return http.get(`/users/${user_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/users\", data, { headers: authHeader() });\r\n  }\r\n\r\n  update(user_id, data) {\r\n    return http.put(`/users/${user_id}`, data, { headers: authHeader() });\r\n  }\r\n\r\n  delete(user_id) {\r\n    return http.delete(`/users/${user_id}`, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserDataService();"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["http-common.js","services/auth-header.js","services/auth.service.js","services/location.service.js","components/locations/add-location.component.js","components/locations/location.component.js","components/locations/locations-list.component.js","services/user.service.js","components/users/add-user.component.js","components/users/user.component.js","components/users/users-list.component.js","services/character.service.js","components/characters/add-character.component.js","components/characters/character.component.js","components/characters/characters-list.component.js","components/login.component.js","components/register.component.js","components/profile.component.js","components/board-admin.component.js","App.js","index.js"],"names":["axios","create","baseURL","headers","authHeader","user","JSON","parse","localStorage","getItem","accessToken","API_URL","username","password","post","then","response","data","setItem","stringify","removeItem","discord_id","role","rank","http","get","location_id","put","delete","location_name","AddLocation","props","onChangeLocationName","bind","saveLocation","newLocation","state","checkForAdmin","user_id","submitted","e","this","setState","target","value","LocationDataService","console","log","catch","AuthService","getCurrentUser","className","onClick","htmlFor","type","id","required","onChange","name","Component","Location","getLocation","updateLocation","deleteLocation","currentLocation","message","match","params","prevState","update","history","push","LocationsList","retrieveLocations","refreshList","setActiveLocation","locations","currentLocationl","currentIndex","getAll","location","index","map","to","AddUser","onChangeUsername","onChangePassword","onChangeRank","onChangeDiscordId","onChangeRole","saveUser","newUser","user_name","user_rank","UserDataService","date","User","getUser","updateUser","deleteUser","currentUser","Example","useState","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","UsersList","retrieveUsers","setActiveUser","users","currentUserl","character_id","approved","character_name","AddCharacter","onChangeCharacterName","onChangeCharacterClass","onChangeLevel","onChangeStatus","onChangeStatArray","onChangeLocationId","onChangeUserId","onChangeApproved","saveCharacter","newCharacter","character_class","level","status","stat_array","parseInt","CharacterDataService","placeholder","min","max","Character","onChangerStatus","getCharacter","updateCharacter","deleteCharacter","currentCharacter","CharactersList","onChangeSearchCharacterName","retrieveCharacters","setActiveCharacter","searchCharacterName","characters","currentCharacterl","character","findAllByName","Done","icon","faCheck","size","Progress","faHourglassHalf","Check","isDone","class","Login","handleLogin","loading","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","window","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","validations","disabled","style","display","vusername","vpassword","vdiscord_id","Register","handleRegister","onChangeDiscordID","successful","register","Profile","actualCurrentUser","UserService","CharacterService","findCharactersByUser","a","Carousel","interval","wrap","touch","keyboard","Item","BoardAdmin","App","logOut","showAdminBoard","showRegisteredUserBoard","undefined","logout","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","faUser","faSignOutAlt","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.938fe289.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://the-drumian-commonwealth.herokuapp.com/api\",\r\n  //baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","export default function authHeader() {\r\n    \r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.accessToken) {\r\n      // for Node.js Express back-end\r\n      return { 'x-access-token': user.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","import axios from \"axios\";\r\nimport http from \"../http-common\";\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = \"https://the-drumian-commonwealth.herokuapp.com/api/auth/\";\r\n//const API_URL = \"/api/auth/\";\r\nconst USER_URL = \"/api/users/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, password, discord_id) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      password,\r\n      discord_id,\r\n      role: 1,\r\n      rank: \"Recruit\",\r\n\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import http from \"../http-common\";\r\nimport authHeader from './auth-header';\r\n\r\nclass LocationDataService {\r\n  getAll() {\r\n    return http.get(\"/locations\", { headers: authHeader() });\r\n  }\r\n\r\n  get(location_id) {\r\n    return http.get(`/locations/${location_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/locations\", data, { headers: authHeader() });\r\n  }\r\n\r\n  update(location_id, data) {\r\n    return http.put(`/locations/${location_id}`, data, { headers: authHeader() });\r\n  }\r\n\r\n  delete(location_id) {\r\n    return http.delete(`/locations/${location_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  findByLocationName(location_name) {\r\n    return http.get(`/locations?location_name=${location_name}`, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new LocationDataService();","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nexport default class AddLocation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeLocationName = this.onChangeLocationName.bind(this);\r\n    this.saveLocation = this.saveLocation.bind(this);\r\n    this.newLocation = this.newLocation.bind(this);\r\n\r\n    this.state = {\r\n      location_id: null,\r\n      location_name: \"\",\r\n      checkForAdmin: null,\r\n      user_id: null,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeLocationName(e) {\r\n    this.setState({\r\n      location_name: e.target.value\r\n    });\r\n  }\r\n\r\n  saveLocation() {\r\n    var data = {\r\n      location_name: this.state.location_name\r\n    };\r\n\r\n    LocationDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          location_id: response.data.location_id,\r\n          location_name: response.data.location_name,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newLocation() {\r\n    this.setState({\r\n      location_id: null,\r\n      location_name: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { checkForAdmin } = this.state;\r\n    if(checkForAdmin){\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newLocation}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n        <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"location_name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"location_name\"\r\n                required\r\n                value={this.state.location_name}\r\n                onChange={this.onChangeLocationName}\r\n                name=\"location_name\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveLocation} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n  else{\r\n    return(\r\n    <h3>Admin Content</h3>\r\n    );\r\n  }\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\n\r\nexport default class Location extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeLocationName = this.onChangeLocationName.bind(this);\r\n    this.getLocation = this.getLocation.bind(this);\r\n    this.updateLocation = this.updateLocation.bind(this);\r\n    this.deleteLocation = this.deleteLocation.bind(this);\r\n\r\n    this.state = {\r\n      currentLocation: {\r\n        location_id: null,\r\n        location_name: \"\",\r\n\r\n        submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocation(this.props.match.params.location_id);\r\n  }\r\n\r\n  onChangeLocationName(e) {\r\n    const location_name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentLocation: {\r\n          ...prevState.currentLocation,\r\n          location_name: location_name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getLocation(location_id) {\r\n    LocationDataService.get(location_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentLocation: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateLocation() {\r\n    LocationDataService.update(\r\n      this.state.currentLocation.location_id,\r\n      this.state.currentLocation\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The Location was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteLocation() {    \r\n    LocationDataService.delete(this.state.currentLocation.location_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Locations')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentLocation } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentLocation ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Location</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"location_name\">Location Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"location_name\"\r\n                  value={currentLocation.location_name}\r\n                  onChange={this.onChangeLocationName}\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteLocation}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateLocation}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Location...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nexport default class LocationsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveLocations = this.retrieveLocations.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveLocation = this.setActiveLocation.bind(this);\r\n\r\n    this.state = {\r\n      locations: [],\r\n      currentLocationl: null,\r\n      currentIndex: -1,\r\n      checkForAdmin: null,\r\n      user_id: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveLocations();\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n  }\r\n\r\n  retrieveLocations() {\r\n    LocationDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          locations: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveLocations();\r\n    this.setState({\r\n      currentLocation: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveLocation(location, index) {\r\n    this.setState({\r\n      currentLocation: location,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { checkForAdmin, locations, currentLocation, currentIndex } = this.state;\r\n    if(checkForAdmin){\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Locations List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {locations &&\r\n              locations.map((location, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveLocation(location, index)}\r\n                  key={index}\r\n                >\r\n                  {location.location_name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <Link to={\"/addLocation\"} className=\"nav-link\">\r\n            <button className=\"btn btn-success\">\r\n            Add Location\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentLocation ? (\r\n            <div>\r\n              <h4>Location</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Location Name:</strong>\r\n                </label>{\" \"}\r\n                {currentLocation.location_name}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/locations/\" + currentLocation.location_id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Location...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else{\r\n    return(\r\n    <h3>Admin Content</h3>\r\n    );\r\n  }\r\n}\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nimport http from \"../http-common\";\r\n\r\nconst API_URL = 'https://the-drumian-commonwealth.herokuapp.com/api/test/';\r\n//const API_URL = \"/api/test/\";\r\n\r\nclass UserDataService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all', { headers: authHeader() });\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n\r\n  //==============================//\r\n\r\n  getAll() {\r\n    return http.get(\"/users\", { headers: authHeader() });\r\n  }\r\n\r\n  get(user_id) {\r\n    return http.get(`/users/${user_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/users\", data, { headers: authHeader() });\r\n  }\r\n\r\n  update(user_id, data) {\r\n    return http.put(`/users/${user_id}`, data, { headers: authHeader() });\r\n  }\r\n\r\n  delete(user_id) {\r\n    return http.delete(`/users/${user_id}`, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserDataService();","import React, { Component } from \"react\";\r\nimport UserDataService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nexport default class AddUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeRank = this.onChangeRank.bind(this);\r\n    this.onChangeDiscordId = this.onChangeDiscordId.bind(this);\r\n    this.onChangeRole = this.onChangeRole.bind(this);\r\n    this.saveUser = this.saveUser.bind(this);\r\n    this.newUser = this.newUser.bind(this);\r\n\r\n    this.state = {\r\n      user_id: null,\r\n      rank: \"\",\r\n      username: \"\",\r\n      discord_id: \"\",\r\n      role: \"\",\r\n      password: \"\",\r\n      checkForAdmin: null,\r\n      user_id: null,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      user_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRank(e) {\r\n    this.setState({\r\n      user_rank: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscordId(e) {\r\n    this.setState({\r\n      discord_id: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRole(e) {\r\n    this.setState({\r\n      role: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  saveUser() {\r\n    var data = {\r\n      rank: this.state.user_rank,\r\n      username: this.state.user_name,\r\n      discord_id: this.state.discord_id,\r\n      role: this.state.role,\r\n      password: this.state.password,\r\n\r\n      \r\n    };\r\n\r\n    UserDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          user_id: response.data.user_id,\r\n          rank: response.data.rank,\r\n          username: response.data.username,\r\n          discord_id: response.data.discord_id,\r\n          role: response.data.role,\r\n          password: response.date.password,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newUser() {\r\n    this.setState({\r\n      user_id: null,\r\n      rank: \"\",\r\n      username: \"\",\r\n      discord_id: \"\",\r\n      role: \"\",\r\n      password: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { checkForAdmin } = this.state;\r\n    if(checkForAdmin){\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newUser}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                required\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                name=\"username\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"rank\">Rank</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"rank\"\r\n                required\r\n                value={this.state.rank}\r\n                onChange={this.onChangeRank}\r\n                name=\"rank\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discord_id\">Discord ID</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discord_id\"\r\n                required\r\n                value={this.state.discord_id}\r\n                onChange={this.onChangeDiscordId}\r\n                name=\"discord_id\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"role\">Role</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"role\"\r\n                required\r\n                value={this.state.role}\r\n                onChange={this.onChangeRole}\r\n                name=\"role\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                required\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                name=\"password\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveUser} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n  else{\r\n    return(\r\n    <h3>Admin Content</h3>\r\n    );\r\n  }\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport UserDataService from \"../../services/user.service\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\n\r\n\r\n\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeRank = this.onChangeRank.bind(this);\r\n    this.onChangeDiscordId = this.onChangeDiscordId.bind(this);\r\n    this.onChangeRole = this.onChangeRole.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.getUser = this.getUser.bind(this);\r\n    this.updateUser = this.updateUser.bind(this);\r\n    this.deleteUser = this.deleteUser.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: {\r\n      user_id: null,\r\n      rank: \"\",\r\n      username: \"\",\r\n      discord_id: \"\",\r\n      role: \"\",\r\n      password: \"\",\r\n      checkForAdmin: null,\r\n\r\n      submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.getUser(this.props.match.params.user_id);\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    const username = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentUser: {\r\n          ...prevState.currentUser,\r\n          username: username\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeRank(e) {\r\n    const rank = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentUser: {\r\n          ...prevState.currentUser,\r\n          rank: rank\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDiscordId(e) {\r\n    const discord_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentUser: {\r\n          ...prevState.currentUser,\r\n          discord_id: discord_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeRole(e) {\r\n    const role = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentUser: {\r\n          ...prevState.currentUser,\r\n          role: role\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    const password = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentUser: {\r\n          ...prevState.currentUser,\r\n          password: password\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getUser(user_id) {\r\n    UserDataService.get(user_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentUser: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateUser() {\r\n    UserDataService.update(\r\n      this.state.currentUser.user_id,\r\n      this.state.currentUser\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The User was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteUser() {    \r\n    UserDataService.delete(this.state.currentUser.user_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Users')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, checkForAdmin } = this.state;\r\n\r\n\r\n    var Example = () => {\r\n      const [show, setShow] = useState(false);\r\n    \r\n      const handleClose = () => setShow(false);\r\n      const handleShow = () => setShow(true);\r\n    \r\n      return (\r\n        <>\r\n          <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={handleShow}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n\r\n    \r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Delete the profile of {currentUser.username}?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>This action cannot be undone!</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"success\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"warning\" onClick={this.deleteUser}>\r\n                Delete\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if(checkForAdmin){\r\n\r\n    return (\r\n      <div>\r\n        {currentUser ? (\r\n          <div className=\"edit-form\">\r\n            <h4>User</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"username\"\r\n                  value={currentUser.username}\r\n                  onChange={this.onChangeUsername}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"rank\">Rank</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"rank\"\r\n                  value={currentUser.rank}\r\n                  onChange={this.onChangeRank}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"discord_id\">Discord ID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"discord_id\"\r\n                  value={currentUser.discord_id}\r\n                  onChange={this.onChangeDiscordId}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"role\">Role</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"role\"\r\n                  value={currentUser.role}\r\n                  onChange={this.onChangeRole}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  value={currentUser.password}\r\n                  onChange={this.onChangePassword}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <Example />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateUser}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a User...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n  }\r\n  else{\r\n    return(\r\n    <h3>Admin content.</h3>\r\n    );\r\n  }\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport UserDataService from \"../../services/user.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nexport default class UsersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveUsers = this.retrieveUsers.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveUser = this.setActiveUser.bind(this);\r\n\r\n    this.state = {\r\n      users: [],\r\n      currentUserl: null,\r\n      currentIndex: -1,\r\n      user_id: null,\r\n      checkForAdmin: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveUsers();\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n  retrieveUsers() {\r\n    UserDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          users: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveUsers();\r\n    this.setState({\r\n      currentUser: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveUser(user, index) {\r\n    this.setState({\r\n      currentUser: user,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { users, currentUser, currentIndex, user_id, checkForAdmin } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Users List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {users &&\r\n              users.map((user, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveUser(user, index)}\r\n                  key={index}\r\n                >\r\n                  {user.username}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentUser ? (\r\n            <div>\r\n              <h4>User</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Username:</strong>\r\n                </label>{\" \"}\r\n                {currentUser.username}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Rank:</strong>\r\n                </label>{\" \"}\r\n                {currentUser.rank}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Discord ID:</strong>\r\n                </label>{\" \"}\r\n                {currentUser.discord_id}\r\n              </div>\r\n\r\n              {checkForAdmin && ( \r\n              <Link\r\n                to={\"/users/\" + currentUser.user_id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n              )}\r\n            </div>\r\n            \r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a User...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\nimport authHeader from './auth-header';\r\n\r\nclass CharacterDataService {\r\n  getAll() {\r\n    \r\n    return http.get(\"/characters\", { headers: authHeader() });\r\n  }\r\n\r\n  get(character_id) {\r\n    return http.get(`/characters/${character_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/characters\", data, { headers: authHeader() });\r\n  }\r\n\r\n  update(character_id, data) {\r\n    return http.put(`/characters/${character_id}`, data, { headers: authHeader() });\r\n  }\r\n\r\n  delete(character_id) {\r\n    return http.delete(`/characters/${character_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  findCharactersByUser(user_id) {\r\n    return http.get(`/characters/oneuser/${user_id}`, { headers: authHeader() });\r\n  }\r\n\r\n  findAllByApproved(approved){\r\n    return http.get(`/characters/approved/${approved}`, { headers: authHeader() });\r\n  }\r\n\r\n  findAllByName(character_name) {\r\n    return http.get(`/characters/byname/${character_name}`, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new CharacterDataService();","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\nimport LocationDataService from \"../../services/location.service\";\r\n\r\nexport default class AddCharacter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\r\n    this.onChangeCharacterClass = this.onChangeCharacterClass.bind(this);\r\n    this.onChangeLevel = this.onChangeLevel.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeStatArray = this.onChangeStatArray.bind(this);\r\n    this.onChangeLocationId = this.onChangeLocationId.bind(this);\r\n    this.onChangeUserId = this.onChangeUserId.bind(this);\r\n    this.onChangeApproved = this.onChangeApproved.bind(this);\r\n    this.saveCharacter = this.saveCharacter.bind(this);\r\n    this.newCharacter = this.newCharacter.bind(this);\r\n\r\n    this.state = {\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: null,\r\n      status: \"Alive\",\r\n      stat_array: \"\",\r\n      user_id: null,\r\n      location_id: 0,\r\n      approved: 0,\r\n      checkForAdmin: null,\r\n      locations: [],\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n\r\n    LocationDataService.getAll().then( response => { this.setState({\r\n      locations: response.data\r\n    })\r\n    })\r\n  }\r\n\r\n  onChangeCharacterName(e) {\r\n    this.setState({\r\n      character_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCharacterClass(e) {\r\n    this.setState({\r\n      character_class: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLevel(e) {\r\n    this.setState({\r\n      level: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStatus(e) {\r\n    this.setState({\r\n      status: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStatArray(e) {\r\n    this.setState({\r\n      stat_array: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLocationId(e) {\r\n    this.setState({\r\n      location_id: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUserId(e) {\r\n    this.setState({\r\n      user_id: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeApproved(e){\r\n    this.setState({\r\n      approved: e.target.value\r\n    });\r\n  }\r\n\r\n  saveCharacter() {\r\n    var data = {\r\n      character_name: this.state.character_name,\r\n      character_class: this.state.character_class,\r\n      level: parseInt(this.state.level),\r\n      status: this.state.status,\r\n      stat_array: this.state.stat_array,\r\n      location_id: this.state.location_id,\r\n      user_id: this.state.user_id,\r\n      approved: this.state.approved,\r\n    };\r\n\r\n    console.log(this.state.character_name);\r\n    console.log(this.state.character_class);\r\n    console.log(this.state.level);\r\n    console.log(this.state.status);\r\n    console.log(this.state.stat_array);\r\n    console.log(this.state.location_id);\r\n    console.log(this.state.user_id);\r\n    console.log(this.state.approved);\r\n\r\n    CharacterDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          character_id: response.data.character_id,\r\n          character_name: response.data.character_name,\r\n          character_class: response.data.character_class,\r\n          level: response.data.level,\r\n          status: response.data.status,\r\n          stat_array: response.data.stat_array,\r\n          location_id: response.data.stat_array,\r\n          user_id: response.data.stat_array,\r\n          approved: response.data.approved,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newCharacter() {\r\n    this.setState({\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: 1,\r\n      status: \"Alive\",\r\n      stat_array: \"\",\r\n      user_id: null,\r\n      location_id: 0,\r\n      approved: 0,\r\n      checkForAdmin: null,\r\n      locations: [],\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { checkForAdmin, locations } = this.state;\r\n\r\n    return (\r\n\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newCharacter}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"character_name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"character_name\"\r\n                required\r\n                value={this.state.character_name}\r\n                onChange={this.onChangeCharacterName}\r\n                name=\"character_name\"\r\n                placeholder=\"Your character's name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"character_class\">Class</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"character_class\"\r\n                required\r\n                value={this.state.character_class}\r\n                onChange={this.onChangeCharacterClass}\r\n                name=\"character_class\"\r\n                placeholder=\"Your character's class\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"level\">Level</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"level\"\r\n                required\r\n                value={this.state.level}\r\n                onChange={this.onChangeLevel}\r\n                name=\"level\"\r\n                min=\"1\"\r\n                max=\"20\"\r\n                placeholder=\"Your character's level\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"status\">Status</label>\r\n              <select className=\"form-control\" id=\"status\" required value={this.state.status}\r\n                onChange={this.onChangeStatus}\r\n                name=\"status\"\r\n                placeholder=\"Your character's current status\">\r\n              <option value= \"Alive\">Alive</option>\r\n              <option value= \"Retired\">Retired</option>\r\n              <option value= \"Deceased\">Deceased</option>\r\n            </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"stat_array\">Stat Array</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"stat_array\"\r\n                required\r\n                value={this.state.stat_array}\r\n                onChange={this.onChangeStatArray}\r\n                name=\"stat_array\"\r\n                placeholder=\"Ex. 11, 11, 11, 11, 11, 11\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"location_id\">Location</label>\r\n              <select className=\"form-control\" id=\"location_id\" required value={this.state.location_id}\r\n                onChange={this.onChangeLocationId}\r\n                name=\"location_id\"\r\n                placeholder=\"Your character's current location\">\r\n              {locations.map((location, index) => (\r\n                <option value={location.location_id} key={index}>{location.location_name}</option>\r\n              ))}\r\n            </select>\r\n            </div>\r\n                \r\n            {checkForAdmin && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"user_id\">User</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"user_id\"\r\n                required\r\n                value={this.state.user_id}\r\n                onChange={this.onChangeUserId}\r\n                name=\"user_id\"\r\n                placeholder=\"[ADMIN FIELD] User\"\r\n              />\r\n            </div>\r\n            )}\r\n\r\n            <button onClick={this.saveCharacter} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nexport default class Character extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\r\n    this.onChangeCharacterClass = this.onChangeCharacterClass.bind(this);\r\n    this.onChangeLevel = this.onChangeLevel.bind(this);\r\n    this.onChangerStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeStatArray = this.onChangeStatArray.bind(this);\r\n    this.onChangeLocationId = this.onChangeLocationId.bind(this);\r\n    this.onChangeUserId = this.onChangeUserId.bind(this);\r\n    this.onChangeApproved = this.onChangeApproved.bind(this);\r\n    this.getCharacter = this.getCharacter.bind(this);\r\n    this.updateCharacter = this.updateCharacter.bind(this);\r\n    this.deleteCharacter = this.deleteCharacter.bind(this);\r\n\r\n    this.state = {\r\n      currentCharacter: {\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: null,\r\n      status: \"\",\r\n      stat_array: \"\",\r\n      user_id: null,\r\n      location_id: null,\r\n      approved: null,\r\n      user_id: null,\r\n      checkForAdmin: null,\r\n\r\n      submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCharacter(this.props.match.params.character_id);\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeCharacterName(e) {\r\n    const character_name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          character_name: character_name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeCharacterClass(e) {\r\n    const character_class = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          character_class: character_class\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeLevel(e) {\r\n    const level = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          level: level\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeStatus(e) {\r\n    const status = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          status: status\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeStatArray(e) {\r\n    const stat_array = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          stat_array: stat_array\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeLocationId(e) {\r\n    const location_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          location_id: location_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeUserId(e) {\r\n    const user_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          user_id: user_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeApproved(e) {\r\n    const approved = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          approved: approved\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getCharacter(character_id) {\r\n    CharacterDataService.get(character_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentCharacter: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateCharacter() {\r\n    CharacterDataService.update(\r\n      this.state.currentCharacter.character_id,\r\n      this.state.currentCharacter\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The Character was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteCharacter() {    \r\n    CharacterDataService.delete(this.state.currentCharacter.character_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Characters')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentCharacter, user_id, checkForAdmin } = this.state;\r\n\r\n    if(user_id == currentCharacter.user_id || checkForAdmin){\r\n    \r\n    return (\r\n      <div>\r\n        {currentCharacter ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Character</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"character_name\">Character Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"character_name\"\r\n                  value={currentCharacter.character_name}\r\n                  onChange={this.onChangeCharacterName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"character_class\">Character Class</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"character_class\"\r\n                  value={currentCharacter.character_class}\r\n                  onChange={this.onChangeCharacterClass}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"level\">Level</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"level\"\r\n                  value={currentCharacter.level}\r\n                  onChange={this.onChangeLevel}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"status\">Status</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"status\"\r\n                  value={currentCharacter.status}\r\n                  onChange={this.onChangeStatus}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"stat_array\">Stat Array</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"stat_array\"\r\n                  value={currentCharacter.stat_array}\r\n                  onChange={this.onChangeStatArray}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"location_id\">Location</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"location_id\"\r\n                  value={currentCharacter.location_id}\r\n                  onChange={this.onChangeLocationId}\r\n                />\r\n              </div>\r\n\r\n              {checkForAdmin && (\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"user_id\">Player</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"user_id\"\r\n                  value={currentCharacter.user_id}\r\n                  onChange={this.onChangeUserId}\r\n                />\r\n              </div>\r\n              )}\r\n\r\n              {checkForAdmin && (\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"approved\">Approved</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"approved\"\r\n                  value={currentCharacter.approved}\r\n                  onChange={this.onChangeApproved}\r\n                />\r\n              </div>\r\n              )}\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteCharacter}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateCharacter}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Character...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  else{\r\n    return(\r\n    <h3>Can't edit others' characters :\\</h3>\r\n    );\r\n  }\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../App.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHourglassHalf, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nexport default class CharactersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchCharacterName = this.onChangeSearchCharacterName.bind(this);\r\n    this.retrieveCharacters = this.retrieveCharacters.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveCharacter = this.setActiveCharacter.bind(this);\r\n    this.searchCharacterName = this.searchCharacterName.bind(this);\r\n\r\n    this.state = {\r\n      characters: [],\r\n      currentCharacterl: null,\r\n      currentIndex: -1,\r\n      searchCharacterName: \"\",\r\n      user_id: null,\r\n      checkForAdmin: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    \r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n\r\n    this.retrieveCharacters();\r\n  }\r\n\r\n  onChangeSearchCharacterName(e) {\r\n    const searchCharacterName = e.target.value;\r\n\r\n    this.setState({\r\n      searchCharacterName: searchCharacterName\r\n    });\r\n  }\r\n\r\n  retrieveCharacters() {\r\n    CharacterDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          characters: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveCharacters();\r\n    this.setState({\r\n      currentCharacter: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveCharacter(character, index) {\r\n    this.setState({\r\n      currentCharacter: character,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  searchCharacterName() {\r\n    CharacterDataService.findAllByName(this.state.searchCharacterName)\r\n      .then(response => {\r\n        this.setState({\r\n          characters: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { user_id, checkForAdmin, searchCharacterName, characters, currentCharacter, currentIndex } = this.state;\r\n\r\n\r\n    function Done(){\r\n      return  <FontAwesomeIcon icon={faCheck} size=\"lg\"  />;\r\n    }\r\n\r\n    function Progress(){\r\n      return <FontAwesomeIcon icon={faHourglassHalf} size=\"lg\"  />;\r\n    }\r\n\r\n    function Check(props){\r\n      const isDone = props.isDone;\r\n      if(isDone){\r\n        return <Done/>;\r\n      }\r\n      return <Progress/>;\r\n    }\r\n\r\n    return (\r\n      \r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              placeholder=\"Character Name\"\r\n              value={searchCharacterName}\r\n              onChange={this.onChangeSearchCharacterName}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-dark\"\r\n                type=\"button\"\r\n                onClick={this.searchCharacterName}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"col-md-6\">\r\n        <div class=\"pushh4\">\r\n          <h4>Characters List</h4>\r\n          </div>\r\n          <div class=\"characterList\">\r\n          <ul className=\"list-group\">\r\n            {characters &&\r\n              characters.map((character, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveCharacter(character, index)}\r\n                  key={index}\r\n                >\r\n                  {character.character_name}\r\n                </li>\r\n              ))}\r\n          </ul>   \r\n                  \r\n        </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentCharacter ? (\r\n            \r\n            <div class=\"characterTab\">\r\n              <div class=\"characterElement\">\r\n                <label>\r\n                  <strong>Character Name:</strong>\r\n                </label>{\" \"}\r\n                <div class=\"characterElement\">\r\n                {currentCharacter.character_name}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"characterElement\">\r\n                <label>\r\n                  <strong>Player:</strong>\r\n                </label>{\" \"}\r\n                <div class=\"characterElement\">\r\n                {currentCharacter.user_id}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"characterElement\">\r\n                <label>\r\n                  <strong>Character Class:</strong>\r\n                </label>{\" \"}\r\n                <div class=\"characterElement\">\r\n                {currentCharacter.character_class}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"characterElement\">\r\n                <label>\r\n                  <strong>Level:</strong>\r\n                </label>{\" \"}\r\n                <div class=\"characterElement\">\r\n                {currentCharacter.level}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"characterElement\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                <div class=\"characterElement\">\r\n                {currentCharacter.status}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"characterElement\">\r\n                <label>\r\n                  <strong>Stat Array:</strong>\r\n                </label>{\" \"}\r\n                <div class=\"characterElement\">\r\n                {currentCharacter.stat_array}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"characterElement\">\r\n                <label>\r\n                  <strong>Location:</strong>\r\n                </label>{\" \"}\r\n                <div class=\"characterElement\">\r\n                {currentCharacter.location_id}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"characterElement\">\r\n                <label>\r\n                <strong>Approved:</strong> \r\n                  {   } <Check isDone={currentCharacter.approved} />\r\n                </label>{\" \"}\r\n                <div class=\"characterElement\">\r\n                {currentCharacter.approved}\r\n                </div>\r\n              </div>\r\n\r\n              {(checkForAdmin || currentCharacter.user_id == user_id) && ( \r\n              <div class=\"characterButtonRight\">\r\n              <Link\r\n                to={\"/characters/\" + currentCharacter.character_id}\r\n                className=\"btn btn-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n              </div>\r\n              )}\r\n          </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Character...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The Discord ID must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vdiscord_id = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeDiscordID = this.onChangeDiscordID.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      discord_id: \"\",\r\n      role: 1,\r\n      rank: \"Recruit\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscordID(e){\r\n    this.setState({\r\n      discord_id: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.password,\r\n        this.state.discord_id\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"discord_id\">Discord ID</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"discord_id\"\r\n                    value={this.state.discord_id}\r\n                    onChange={this.onChangeDiscordID}\r\n                    validations={[required, vdiscord_id]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-warning btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","//import { response } from \"express\";\r\nimport React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport CharacterService from \"../services/character.service\";\r\nimport UserService from \"../services/user.service\";\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHourglassHalf, faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser(),\r\n      actualCurrentUser: \"\",\r\n      characters: []\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    UserService.get(this.state.currentUser.user_id).then(\r\n      response => {\r\n        this.setState({\r\n          actualCurrentUser: response.data\r\n        }, () =>\r\n        CharacterService.findCharactersByUser(this.state.currentUser.user_id).then(\r\n          async (data) => {\r\n            this.setState({\r\n              characters: data.data\r\n            })\r\n          })\r\n        )  \r\n    }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, characters, actualCurrentUser } = this.state;\r\n\r\n    function Done(){\r\n      return  <FontAwesomeIcon icon={faCheck} size=\"lg\"  />;\r\n    }\r\n\r\n    function Progress(){\r\n      return <FontAwesomeIcon icon={faHourglassHalf} size=\"lg\"  />;\r\n    }\r\n\r\n    function Check(props){\r\n      const isDone = props.isDone;\r\n      if(isDone){\r\n        return <Done/>;\r\n      }\r\n      return <Progress/>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n\r\n<i class=\"fas fa-user\"></i>\r\n     \r\n\r\n\r\n        <header className=\"jumbotron\">\r\n          \r\n              <h3>\r\n                <strong>{currentUser.username}</strong>'s Profile\r\n              </h3>\r\n\r\n              <p>\r\n              <strong>Rank: </strong>{\" \"}\r\n              {actualCurrentUser.rank}\r\n              </p>\r\n\r\n              <p>\r\n              <strong>Discord ID: </strong>{\" \"}\r\n              {actualCurrentUser.discord_id}\r\n              </p>\r\n        </header>\r\n        \r\n        \r\n        <div id=\"car\">\r\n        <Carousel interval={500000000} wrap={true} touch={false} keyboard={false} class=\"carousel-slide\">  \r\n          {characters.map((character, index) => (\r\n          <Carousel.Item key={index}>\r\n            \r\n            <div>\r\n                <label>\r\n                  <strong>Character Name:</strong> {character.character_name}\r\n                </label>{\" \"}\r\n                \r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Character Class:</strong> {character.character_class}\r\n                </label>{\" \"}\r\n                \r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Level:</strong> {character.level}\r\n                </label>{\" \"}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong> {character.status}\r\n                </label>{\" \"}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Stat Array:</strong> {character.stat_array}\r\n                </label>{\" \"}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Location:</strong> {character.location_id}\r\n                </label>{\" \"}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Approved:</strong> \r\n                  {   } <Check isDone={character.approved} />\r\n                   \r\n                </label>{\" \"}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/characters/\" + character.character_id}\r\n                className=\"btn btn-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n\r\n          </Carousel.Item>\r\n           ))}\r\n\r\n        </Carousel>  \r\n        </div>\r\n\r\n        <div id=\"pushleft\">\r\n        <Link to={\"/addCharacter\"} className=\"nav-link\">\r\n            <button className=\"btn btn-success\">\r\n            Add Character\r\n            </button>\r\n        </Link>\r\n\r\n        </div>\r\n\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      checkForAdmin: null,\r\n      user_id: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        user_id: user.user_id,\r\n        checkForAdmin: user.user_id == 2\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { checkForAdmin } = this.state;\r\n\r\n    if(checkForAdmin){\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n            <h3>Admin Board</h3>\r\n        </header>\r\n\r\n        <Link to={\"/locations\"} className=\"nav-link\">\r\n            <button className=\"btn btn-warning\">\r\n            Locations List\r\n            </button>\r\n        </Link>\r\n\r\n        <Link to={\"/addLocation\"} className=\"nav-link\">\r\n            <button className=\"btn btn-success\">\r\n            Add Location\r\n            </button>\r\n        </Link>\r\n\r\n        <Link to={\"/addUser\"} className=\"nav-link\">\r\n            <button className=\"btn btn-success\">\r\n            Add User\r\n            </button>\r\n        </Link>\r\n\r\n        <Link to={\"/addCharacter\"} className=\"nav-link\">\r\n            <button className=\"btn btn-success\">\r\n            Add Character\r\n            </button>\r\n        </Link>\r\n\r\n      </div>\r\n    );\r\n  }\r\n  else{\r\n    return(\r\n    <h3>Admin Content</h3>\r\n    );\r\n  }\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MDBContainer, MDBRow, MDBCol} from \"mdbreact\";\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport AddLocation from \"./components/locations/add-location.component\";\r\nimport Location from \"./components/locations/location.component\";\r\nimport LocationsList from \"./components/locations/locations-list.component\";\r\nimport AddUser from \"./components/users/add-user.component\";\r\nimport User from \"./components/users/user.component\";\r\nimport UsersList from \"./components/users/users-list.component\";\r\nimport AddCharacter from \"./components/characters/add-character.component\";\r\nimport Character from \"./components/characters/character.component\";\r\nimport CharactersList from \"./components/characters/characters-list.component\";\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showRegisteredUserBoard: false,\r\n      currentUser: undefined\r\n    };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showRegisteredUserBoard: user.role >= 1,\r\n        showAdminBoard: user.role == 2\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      \r\n      <div>\r\n        \r\n\r\n\r\n        <Navbar bg=\"danger\" expand=\"md\">\r\n        \r\n\r\n        <Navbar.Brand href=\"/\">The Commonwealth</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/admin\"} className=\"nav-link\">\r\n                  Admin Board \r\n                  \r\n                </Link>\r\n              </li>\r\n            )}\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/characters\"} className=\"nav-link\">\r\n                Characters\r\n              </Link>\r\n              \r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/users\"} className=\"nav-link\">\r\n                Players\r\n              </Link>\r\n            </li>\r\n\r\n            </Nav>\r\n            <Nav className=\"ml-auto\">\r\n            {currentUser ? (\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}{\"     \"} <FontAwesomeIcon icon={faUser} size=\"lg\" />\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut {\"  \"} <FontAwesomeIcon icon={faSignOutAlt} size=\"lg\"  />\r\n\r\n                  \r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n        <MDBContainer size=\"md\">\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/characters\"]} component={CharactersList} />\r\n            <Route exact path=\"/addLocation\" component={AddLocation} />\r\n            <Route path=\"/locations/:location_id\" component={Location} />\r\n            <Route exact path={[\"/\", \"/locations\"]} component={LocationsList} />\r\n            <Route exact path=\"/addCharacter\" component={AddCharacter} />\r\n            <Route path=\"/characters/:character_id\" component={Character} />\r\n            <Route exact path={[\"/\", \"/users\"]} component={UsersList} />\r\n            <Route exact path=\"/addUser\" component={AddUser} />\r\n            <Route path=\"/users/:user_id\" component={User} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n        </MDBContainer>\r\n      </div>\r\n\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n//import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n//serviceWorker.unregister();"],"sourceRoot":""}
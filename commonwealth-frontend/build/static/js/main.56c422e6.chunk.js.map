{"version":3,"sources":["http-common.js","services/auth.service.js","services/location.service.js","components/locations/add-location.component.js","components/locations/location.component.js","components/locations/locations-list.component.js","services/player.service.js","components/players/add-player.component.js","components/players/player.component.js","components/players/players-list.component.js","services/character.service.js","components/characters/add-character.component.js","components/characters/character.component.js","components/characters/characters-list.component.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-admin.component.js","App.js","index.js"],"names":["axios","create","baseURL","headers","API_URL","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","http","get","location_id","put","delete","location_name","AddLocation","props","onChangeLocationName","bind","saveLocation","newLocation","state","submitted","e","this","setState","target","value","LocationDataService","console","log","catch","className","onClick","htmlFor","type","id","required","onChange","name","Component","Location","getLocation","updateLocation","deleteLocation","currentLocation","message","match","params","prevState","update","history","push","LocationsList","retrieveLocations","refreshList","setActiveLocation","locations","currentLocationl","currentIndex","getAll","location","index","map","to","player_id","AddPlayer","onChangePlayerName","onChangePlayerRank","onChangeDiscordId","onChangeUserId","savePlayer","newPlayer","player_rank","player_name","discord_id","user_id","PlayerDataService","Player","getPlayer","updatePlayer","deletePlayer","currentPlayer","PlayersList","retrievePlayers","setActivePlayer","players","currentPlayerl","player","character_id","AddCharacter","onChangeCharacterName","onChangeCharacterClass","onChangeLevel","onChangeStatus","onChangeStatArray","onChangeLocationId","onChangePlayerId","saveCharacter","newCharacter","character_name","character_class","level","status","stat_array","CharacterDataService","Character","onChangerStatus","getCharacter","updateCharacter","deleteCharacter","currentCharacter","CharactersList","onChangeSearchPlayerName","retrieveCharacters","setActiveCharacter","searchPlayerName","characters","currentCharacterl","character","findByPlayerName","placeholder","role","Login","handleLogin","onChangeUsername","onChangePassword","loading","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","window","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","validations","disabled","style","display","vusername","vpassword","Register","handleRegister","successful","register","authHeader","user","Home","content","UserService","getPublicContent","Profile","currentUser","getCurrentUser","substring","substr","roles","BoardUser","getUserBoard","BoardAdmin","getAdminBoard","App","logOut","showAdminBoard","showRegisteredUserBoard","undefined","logout","href","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56c422e6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  //baseURL: \"https://the-drumian-commonwealth.herokuapp.com/api\",\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import axios from \"axios\";\r\nimport http from \"../http-common\";\r\n\r\n//const API_URL = \"https://the-drumian-commonwealth.herokuapp.com/api/auth/\";\r\nconst API_URL = \"/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import http from \"../http-common\";\r\n\r\nclass LocationDataService {\r\n  getAll() {\r\n    return http.get(\"/locations\");\r\n  }\r\n\r\n  get(location_id) {\r\n    return http.get(`/locations/${location_id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/locations\", data);\r\n  }\r\n\r\n  update(location_id, data) {\r\n    return http.put(`/locations/${location_id}`, data);\r\n  }\r\n\r\n  delete(location_id) {\r\n    return http.delete(`/locations/${location_id}`);\r\n  }\r\n\r\n  findByLocationName(location_name) {\r\n    return http.get(`/locations?location_name=${location_name}`);\r\n  }\r\n}\r\n\r\nexport default new LocationDataService();","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\n\r\nexport default class AddLocation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeLocationName = this.onChangeLocationName.bind(this);\r\n    this.saveLocation = this.saveLocation.bind(this);\r\n    this.newLocation = this.newLocation.bind(this);\r\n\r\n    this.state = {\r\n      location_id: null,\r\n      location_name: \"\",\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeLocationName(e) {\r\n    this.setState({\r\n      location_name: e.target.value\r\n    });\r\n  }\r\n\r\n  saveLocation() {\r\n    var data = {\r\n      location_name: this.state.location_name\r\n    };\r\n\r\n    LocationDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          location_id: response.data.location_id,\r\n          location_name: response.data.location_name,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newLocation() {\r\n    this.setState({\r\n      location_id: null,\r\n      location_name: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newLocation}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n        <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"location_name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"location_name\"\r\n                required\r\n                value={this.state.location_name}\r\n                onChange={this.onChangeLocationName}\r\n                name=\"location_name\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveLocation} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\n\r\nexport default class Location extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeLocationName = this.onChangeLocationName.bind(this);\r\n    this.getLocation = this.getLocation.bind(this);\r\n    this.updateLocation = this.updateLocation.bind(this);\r\n    this.deleteLocation = this.deleteLocation.bind(this);\r\n\r\n    this.state = {\r\n      currentLocation: {\r\n        location_id: null,\r\n        location_name: \"\",\r\n\r\n        submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocation(this.props.match.params.location_id);\r\n  }\r\n\r\n  onChangeLocationName(e) {\r\n    const location_name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentLocation: {\r\n          ...prevState.currentLocation,\r\n          location_name: location_name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getLocation(location_id) {\r\n    LocationDataService.get(location_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentLocation: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateLocation() {\r\n    LocationDataService.update(\r\n      this.state.currentLocation.location_id,\r\n      this.state.currentLocation\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The Location was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteLocation() {    \r\n    LocationDataService.delete(this.state.currentLocation.location_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Locations')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentLocation } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentLocation ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Location</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"location_name\">Location Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"location_name\"\r\n                  value={currentLocation.location_name}\r\n                  onChange={this.onChangeLocationName}\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteLocation}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateLocation}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Location...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class LocationsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveLocations = this.retrieveLocations.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveLocation = this.setActiveLocation.bind(this);\r\n\r\n    this.state = {\r\n      locations: [],\r\n      currentLocationl: null,\r\n      currentIndex: -1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveLocations();\r\n  }\r\n\r\n  retrieveLocations() {\r\n    LocationDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          locations: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveLocations();\r\n    this.setState({\r\n      currentLocation: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveLocation(location, index) {\r\n    this.setState({\r\n      currentLocation: location,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { locations, currentLocation, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Locations List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {locations &&\r\n              locations.map((location, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveLocation(location, index)}\r\n                  key={index}\r\n                >\r\n                  {location.location_name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentLocation ? (\r\n            <div>\r\n              <h4>Location</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Location Name:</strong>\r\n                </label>{\" \"}\r\n                {currentLocation.location_name}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/locations/\" + currentLocation.location_id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Location...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\n\r\nclass PlayerDataService {\r\n  getAll() {\r\n    return http.get(\"/players\");\r\n  }\r\n\r\n  get(player_id) {\r\n    return http.get(`/players/${player_id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/players\", data);\r\n  }\r\n\r\n  update(player_id, data) {\r\n    return http.put(`/players/${player_id}`, data);\r\n  }\r\n\r\n  delete(player_id) {\r\n    return http.delete(`/players/${player_id}`);\r\n  }\r\n}\r\n\r\nexport default new PlayerDataService();","import React, { Component } from \"react\";\r\nimport PlayerDataService from \"../../services/player.service\";\r\n\r\nexport default class AddPlayer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangePlayerName = this.onChangePlayerName.bind(this);\r\n    this.onChangePlayerRank = this.onChangePlayerRank.bind(this);\r\n    this.onChangeDiscordId = this.onChangeDiscordId.bind(this);\r\n    this.onChangeUserId = this.onChangeUserId.bind(this);\r\n    this.savePlayer = this.savePlayer.bind(this);\r\n    this.newPlayer = this.newPlayer.bind(this);\r\n\r\n    this.state = {\r\n      player_id: null,\r\n      player_rank: \"\",\r\n      player_name: \"\",\r\n      discord_id: \"\",\r\n      user_id: null,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangePlayerName(e) {\r\n    this.setState({\r\n      player_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePlayerRank(e) {\r\n    this.setState({\r\n      player_rank: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscordId(e) {\r\n    this.setState({\r\n      discord_id: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUserId(e) {\r\n    this.setState({\r\n      user_id: e.target.value\r\n    });\r\n  }\r\n\r\n  savePlayer() {\r\n    var data = {\r\n      player_rank: this.state.player_rank,\r\n      player_name: this.state.player_name,\r\n      discord_id: this.state.discord_id,\r\n      user_id: this.state.user_id\r\n    };\r\n\r\n    PlayerDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          player_id: response.data.player_id,\r\n          player_rank: response.data.player_rank,\r\n          player_name: response.data.player_name,\r\n          discord_id: response.data.discord_id,\r\n          user_id: response.data.user_id,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newPlayer() {\r\n    this.setState({\r\n      player_id: null,\r\n      player_rank: \"\",\r\n      player_name: \"\",\r\n      discord_id: \"\",\r\n      user_id: null,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPlayer}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"player_name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"player_name\"\r\n                required\r\n                value={this.state.player_name}\r\n                onChange={this.onChangePlayerName}\r\n                name=\"player_name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"player_rank\">Rank</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"player_rank\"\r\n                required\r\n                value={this.state.player_rank}\r\n                onChange={this.onChangePlayerRank}\r\n                name=\"player_rank\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discord_id\">Discord ID</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discord_id\"\r\n                required\r\n                value={this.state.discord_id}\r\n                onChange={this.onChangeDiscordId}\r\n                name=\"discord_id\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"user_id\">User</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"user_id\"\r\n                required\r\n                value={this.state.user_id}\r\n                onChange={this.onChangeUserId}\r\n                name=\"user_id\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.savePlayer} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PlayerDataService from \"../../services/player.service\";\r\n\r\nexport default class Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangePlayerName = this.onChangePlayerName.bind(this);\r\n    this.onChangePlayerRank = this.onChangePlayerRank.bind(this);\r\n    this.onChangeDiscordId = this.onChangeDiscordId.bind(this);\r\n    this.onChangeUserId = this.onChangeUserId.bind(this);\r\n    this.getPlayer = this.getPlayer.bind(this);\r\n    this.updatePlayer = this.updatePlayer.bind(this);\r\n    this.deletePlayer = this.deletePlayer.bind(this);\r\n\r\n    this.state = {\r\n      currentPlayer: {\r\n      player_id: null,\r\n      player_rank: \"\",\r\n      player_name: \"\",\r\n      discord_id: \"\",\r\n      user_id: null,\r\n\r\n      submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPlayer(this.props.match.params.player_id);\r\n  }\r\n\r\n  onChangePlayerName(e) {\r\n    const player_name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPlayer: {\r\n          ...prevState.currentPlayer,\r\n          player_name: player_name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePlayerRank(e) {\r\n    const player_rank = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPlayer: {\r\n          ...prevState.currentPlayer,\r\n          player_rank: player_rank\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDiscordId(e) {\r\n    const discord_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPlayer: {\r\n          ...prevState.currentPlayer,\r\n          discord_id: discord_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeUserId(e) {\r\n    const user_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPlayer: {\r\n          ...prevState.currentPlayer,\r\n          user_id: user_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getPlayer(player_id) {\r\n    PlayerDataService.get(player_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentPlayer: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePlayer() {\r\n    PlayerDataService.update(\r\n      this.state.currentPlayer.player_id,\r\n      this.state.currentPlayer\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The Player was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePlayer() {    \r\n    PlayerDataService.delete(this.state.currentPlayer.player_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Players')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentPlayer } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentPlayer ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Player</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"player_name\">Player Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"player_name\"\r\n                  value={currentPlayer.player_name}\r\n                  onChange={this.onChangePlayerName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"player_rank\">Player Rank</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"player_rank\"\r\n                  value={currentPlayer.player_rank}\r\n                  onChange={this.onChangePlayerRank}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"discord_id\">Discord ID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"discord_id\"\r\n                  value={currentPlayer.discord_id}\r\n                  onChange={this.onChangeDiscordId}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"user_id\">User</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"user_id\"\r\n                  value={currentPlayer.user_id}\r\n                  onChange={this.onChangeUserId}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deletePlayer}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updatePlayer}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Player...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PlayerDataService from \"../../services/player.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class PlayersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrievePlayers = this.retrievePlayers.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActivePlayer = this.setActivePlayer.bind(this);\r\n\r\n    this.state = {\r\n      players: [],\r\n      currentPlayerl: null,\r\n      currentIndex: -1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrievePlayers();\r\n  }\r\n\r\n  retrievePlayers() {\r\n    PlayerDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          players: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrievePlayers();\r\n    this.setState({\r\n      currentPlayer: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActivePlayer(player, index) {\r\n    this.setState({\r\n      currentPlayer: player,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { players, currentPlayer, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Players List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {players &&\r\n              players.map((player, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActivePlayer(player, index)}\r\n                  key={index}\r\n                >\r\n                  {player.player_name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentPlayer ? (\r\n            <div>\r\n              <h4>Player</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Player Name:</strong>\r\n                </label>{\" \"}\r\n                {currentPlayer.player_name}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Player Rank:</strong>\r\n                </label>{\" \"}\r\n                {currentPlayer.player_rank}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Discord ID:</strong>\r\n                </label>{\" \"}\r\n                {currentPlayer.discord_id}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/players/\" + currentPlayer.player_id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Player...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\n\r\nclass CharacterDataService {\r\n  getAll() {\r\n    return http.get(\"/characters\");\r\n  }\r\n\r\n  get(character_id) {\r\n    return http.get(`/characters/${character_id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/characters\", data);\r\n  }\r\n\r\n  update(character_id, data) {\r\n    return http.put(`/characters/${character_id}`, data);\r\n  }\r\n\r\n  delete(character_id) {\r\n    return http.delete(`/characters/${character_id}`);\r\n  }\r\n\r\n  findCharactersByPlayer(player_id) {\r\n    return http.get(`/characters?player_id=${player_id}`);\r\n  }\r\n}\r\n\r\nexport default new CharacterDataService();","import React, { Component } from \"react\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\n\r\nexport default class AddCharacter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\r\n    this.onChangeCharacterClass = this.onChangeCharacterClass.bind(this);\r\n    this.onChangeLevel = this.onChangeLevel.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeStatArray = this.onChangeStatArray.bind(this);\r\n    this.onChangeLocationId = this.onChangeLocationId.bind(this);\r\n    this.onChangePlayerId = this.onChangePlayerId.bind(this);\r\n    this.saveCharacter = this.saveCharacter.bind(this);\r\n    this.newCharacter = this.newCharacter.bind(this);\r\n\r\n    this.state = {\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: null,\r\n      status: \"\",\r\n      stat_array: \"\",\r\n      player_id: null,\r\n      location_id: null,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeCharacterName(e) {\r\n    this.setState({\r\n      character_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCharacterClass(e) {\r\n    this.setState({\r\n      character_class: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLevel(e) {\r\n    this.setState({\r\n      level: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStatus(e) {\r\n    this.setState({\r\n      status: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStatArray(e) {\r\n    this.setState({\r\n      stat_array: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLocationId(e) {\r\n    this.setState({\r\n      location_id: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePlayerId(e) {\r\n    this.setState({\r\n      player_id: e.target.value\r\n    });\r\n  }\r\n\r\n  saveCharacter() {\r\n    var data = {\r\n      character_name: this.state.character_name,\r\n      character_class: this.state.character_class,\r\n      level: this.state.level,\r\n      status: this.state.status,\r\n      stat_array: this.state.stat_array,\r\n      location_id: this.state.location_id,\r\n      player_id: this.state.player_id\r\n    };\r\n\r\n    CharacterDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          character_id: response.data.character_id,\r\n          character_name: response.data.character_name,\r\n          character_class: response.data.character_class,\r\n          level: response.data.level,\r\n          status: response.data.status,\r\n          stat_array: response.data.stat_array,\r\n          location_id: response.data.location_id,\r\n          player_id: response.data.player_id,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newCharacter() {\r\n    this.setState({\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: null,\r\n      status: \"\",\r\n      stat_array: \"\",\r\n      player_id: null,\r\n      location_id: null,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newCharacter}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"character_name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"character_name\"\r\n                required\r\n                value={this.state.character_name}\r\n                onChange={this.onChangeCharacterName}\r\n                name=\"character_name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"character_class\">Class</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"character_class\"\r\n                required\r\n                value={this.state.character_class}\r\n                onChange={this.onChangeCharacterClass}\r\n                name=\"character_class\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"level\">Level</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"level\"\r\n                required\r\n                value={this.state.level}\r\n                onChange={this.onChangeLevel}\r\n                name=\"level\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"status\">Status</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"status\"\r\n                required\r\n                value={this.state.status}\r\n                onChange={this.onChangeStatus}\r\n                name=\"status\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"stat_array\">Stat Array</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"stat_array\"\r\n                required\r\n                value={this.state.stat_array}\r\n                onChange={this.onChangeStatArray}\r\n                name=\"stat_array\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"player_id\">Player</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"player_id\"\r\n                required\r\n                value={this.state.player_id}\r\n                onChange={this.onChangePlayerId}\r\n                name=\"player_id\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"location_id\">Location</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"location_id\"\r\n                required\r\n                value={this.state.location_id}\r\n                onChange={this.onChangeLocationId}\r\n                name=\"location_id\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveCharacter} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\n\r\nexport default class Character extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\r\n    this.onChangeCharacterClass = this.onChangeCharacterClass.bind(this);\r\n    this.onChangeLevel = this.onChangeLevel.bind(this);\r\n    this.onChangerStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeStatArray = this.onChangeStatArray.bind(this);\r\n    this.onChangeLocationId = this.onChangeLocationId.bind(this);\r\n    this.onChangePlayerId = this.onChangePlayerId.bind(this);\r\n    this.getCharacter = this.getCharacter.bind(this);\r\n    this.updateCharacter = this.updateCharacter.bind(this);\r\n    this.deleteCharacter = this.deleteCharacter.bind(this);\r\n\r\n    this.state = {\r\n      currentCharacter: {\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: null,\r\n      status: \"\",\r\n      stat_array: \"\",\r\n      player_id: null,\r\n      location_id: null,\r\n\r\n      submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCharacter(this.props.match.params.character_id);\r\n  }\r\n\r\n  onChangeCharacterName(e) {\r\n    const character_name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          character_name: character_name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeCharacterClass(e) {\r\n    const character_class = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          character_class: character_class\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeLevel(e) {\r\n    const level = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          level: level\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeStatus(e) {\r\n    const status = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          status: status\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeStatArray(e) {\r\n    const stat_array = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          stat_array: stat_array\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeLocationId(e) {\r\n    const location_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          location_id: location_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePlayerId(e) {\r\n    const player_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          player_id: player_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getCharacter(character_id) {\r\n    CharacterDataService.get(character_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentCharacter: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateCharacter() {\r\n    CharacterDataService.update(\r\n      this.state.currentCharacter.character_id,\r\n      this.state.currentCharacter\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The Character was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteCharacter() {    \r\n    CharacterDataService.delete(this.state.currentCharacter.character_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Characters')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentCharacter } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentCharacter ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Character</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"character_name\">Character Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"character_name\"\r\n                  value={currentCharacter.character_name}\r\n                  onChange={this.onChangeCharacterName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"character_class\">Character Class</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"character_class\"\r\n                  value={currentCharacter.character_class}\r\n                  onChange={this.onChangeCharacterClass}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"level\">Level</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"level\"\r\n                  value={currentCharacter.level}\r\n                  onChange={this.onChangeLevel}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"status\">Status</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"status\"\r\n                  value={currentCharacter.status}\r\n                  onChange={this.onChangeStatus}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"stat_array\">Stat Array</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"stat_array\"\r\n                  value={currentCharacter.stat_array}\r\n                  onChange={this.onChangeStatArray}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"location_id\">Location</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"location_id\"\r\n                  value={currentCharacter.location_id}\r\n                  onChange={this.onChangeLocationId}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"palyer_id\">Player</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"player_id\"\r\n                  value={currentCharacter.player_id}\r\n                  onChange={this.onChangePlayerId}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteCharacter}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateCharacter}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Character...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class CharactersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchPlayerName = this.onChangeSearchPlayerName.bind(this);\r\n    this.retrieveCharacters = this.retrieveCharacters.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveCharacter = this.setActiveCharacter.bind(this);\r\n    this.searchPlayerName = this.searchPlayerName.bind(this);\r\n\r\n    this.state = {\r\n      characters: [],\r\n      currentCharacterl: null,\r\n      currentIndex: -1,\r\n      searchPlayerName: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveCharacters();\r\n  }\r\n\r\n  onChangeSearchPlayerName(e) {\r\n    const searchPlayerName = e.target.value;\r\n\r\n    this.setState({\r\n      searchPlayerName: searchPlayerName\r\n    });\r\n  }\r\n\r\n  retrieveCharacters() {\r\n    CharacterDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          characters: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveCharacters();\r\n    this.setState({\r\n      currentCharacter: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveCharacter(character, index) {\r\n    this.setState({\r\n      currentCharacter: character,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  searchPlayerName() {\r\n    CharacterDataService.findByPlayerName(this.state.searchPlayerName)\r\n      .then(response => {\r\n        this.setState({\r\n          characters: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchPlayerName, characters, currentCharacter, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by PlayerName\"\r\n              value={searchPlayerName}\r\n              onChange={this.onChangeSearchPlayerName}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchPlayerName}\r\n              >\r\n                Search by Player\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Characters List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {characters &&\r\n              characters.map((character, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveCharacter(character, index)}\r\n                  key={index}\r\n                >\r\n                  {character.character_name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentCharacter ? (\r\n            <div>\r\n              <h4>Character</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Character Name:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.character_name}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Player Name:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.player_id}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Character Class:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.character_class}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Level:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.level}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.status}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Stat Array:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.stat_array}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Location:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.location_id}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/characters/\" + currentCharacter.character_id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Character...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.accessToken) {\r\n      // for Node.js Express back-end\r\n      return { 'x-access-token': user.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\n//const API_URL = 'https://the-drumian-commonwealth.herokuapp.com/api/test/';\r\nconst API_URL = \"/api/test/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport AddLocation from \"./components/locations/add-location.component\";\r\nimport Location from \"./components/locations/location.component\";\r\nimport LocationsList from \"./components/locations/locations-list.component\";\r\nimport AddPlayer from \"./components/players/add-player.component\";\r\nimport Player from \"./components/players/player.component\";\r\nimport PlayersList from \"./components/players/players-list.component\";\r\nimport AddCharacter from \"./components/characters/add-character.component\";\r\nimport Character from \"./components/characters/character.component\";\r\nimport CharactersList from \"./components/characters/characters-list.component\";\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showRegisteredUserBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showRegisteredUserBoard: user.role == 1,\r\n        showAdminBoard: user.role == 2\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showRegisteredUserBoard, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <a href={\"/\"} className=\"navbar-brand\">\r\n            The Commonwealth\r\n          </a>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/admin\"} className=\"nav-link\">\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/user\"} className=\"nav-link\">\r\n                  User\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/locations\"} className=\"nav-link\">\r\n                Locations\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/addLocation\"} className=\"nav-link\">\r\n                Add Location\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/characters\"} className=\"nav-link\">\r\n                Characters\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/addCharacter\"} className=\"nav-link\">\r\n                Add Character\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/players\"} className=\"nav-link\">\r\n                Players\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/addPlayer\"} className=\"nav-link\">\r\n                Add Player\r\n              </Link>\r\n            </li>\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/characters\"]} component={CharactersList} />\r\n            <Route exact path=\"/addLocation\" component={AddLocation} />\r\n            <Route path=\"/locations/:location_id\" component={Location} />\r\n            <Route exact path={[\"/\", \"/locations\"]} component={LocationsList} />\r\n            <Route exact path=\"/addCharacter\" component={AddCharacter} />\r\n            <Route path=\"/characters/:character_id\" component={Character} />\r\n            <Route exact path={[\"/\", \"/players\"]} component={PlayersList} />\r\n            <Route exact path=\"/addPlayer\" component={AddPlayer} />\r\n            <Route path=\"/players/:player_id\" component={Player} />\r\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/user\" component={BoardUser} />\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n//import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n//serviceWorker.unregister();"],"sourceRoot":""}
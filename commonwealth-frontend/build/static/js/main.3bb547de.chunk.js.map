{"version":3,"sources":["http-common.js","services/location.service.js","components/locations/add-location.component.js","components/locations/location.component.js","components/locations/locations-list.component.js","services/player.service.js","components/players/add-player.component.js","components/players/player.component.js","components/players/players-list.component.js","services/character.service.js","components/characters/add-character.component.js","components/characters/character.component.js","components/characters/characters-list.component.js","App.js","index.js"],"names":["axios","create","baseURL","headers","http","get","location_id","data","post","put","delete","location_name","AddLocation","props","onChangeLocationName","bind","saveLocation","newLocation","state","submitted","e","this","setState","target","value","LocationDataService","then","response","console","log","catch","className","onClick","htmlFor","type","id","required","onChange","name","Component","Location","getLocation","updateLocation","deleteLocation","currentLocation","message","match","params","prevState","update","history","push","LocationsList","retrieveLocations","refreshList","setActiveLocation","locations","currentLocationl","currentIndex","getAll","location","index","map","to","player_id","AddPlayer","onChangePlayerName","onChangePlayerRank","onChangeDiscordId","onChangeUserId","savePlayer","newPlayer","player_rank","player_name","discord_id","user_id","PlayerDataService","Player","getPlayer","updatePlayer","deletePlayer","currentPlayer","PlayersList","retrievePlayers","setActivePlayer","players","currentPlayerl","player","character_id","AddCharacter","onChangeCharacterName","onChangeCharacterClass","onChangeLevel","onChangeStatus","onChangeStatArray","onChangeLocationId","onChangePlayerId","saveCharacter","newCharacter","character_name","character_class","level","status","stat_array","CharacterDataService","Character","onChangerStatus","getCharacter","updateCharacter","deleteCharacter","currentCharacter","CharactersList","onChangeSearchPlayerName","retrieveCharacters","setActiveCharacter","searchPlayerName","characters","currentCharacterl","character","findByPlayerName","placeholder","App","href","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bb547de.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://the-drumian-commonwealth.herokuapp.com/api\",\r\n  //baseURL: \"https://the-drumian-commonwealth.herokuapp.com/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass LocationDataService {\r\n  getAll() {\r\n    return http.get(\"/locations\");\r\n  }\r\n\r\n  get(location_id) {\r\n    return http.get(`/locations/${location_id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/locations\", data);\r\n  }\r\n\r\n  update(location_id, data) {\r\n    return http.put(`/locations/${location_id}`, data);\r\n  }\r\n\r\n  delete(location_id) {\r\n    return http.delete(`/locations/${location_id}`);\r\n  }\r\n\r\n  findByLocationName(location_name) {\r\n    return http.get(`/locations?location_name=${location_name}`);\r\n  }\r\n}\r\n\r\nexport default new LocationDataService();","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\n\r\nexport default class AddLocation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeLocationName = this.onChangeLocationName.bind(this);\r\n    this.saveLocation = this.saveLocation.bind(this);\r\n    this.newLocation = this.newLocation.bind(this);\r\n\r\n    this.state = {\r\n      location_id: null,\r\n      location_name: \"\",\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeLocationName(e) {\r\n    this.setState({\r\n      location_name: e.target.value\r\n    });\r\n  }\r\n\r\n  saveLocation() {\r\n    var data = {\r\n      location_name: this.state.location_name\r\n    };\r\n\r\n    LocationDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          location_id: response.data.location_id,\r\n          location_name: response.data.location_name,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newLocation() {\r\n    this.setState({\r\n      location_id: null,\r\n      location_name: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newLocation}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n        <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"location_name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"location_name\"\r\n                required\r\n                value={this.state.location_name}\r\n                onChange={this.onChangeLocationName}\r\n                name=\"location_name\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveLocation} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\n\r\nexport default class Location extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeLocationName = this.onChangeLocationName.bind(this);\r\n    this.getLocation = this.getLocation.bind(this);\r\n    this.updateLocation = this.updateLocation.bind(this);\r\n    this.deleteLocation = this.deleteLocation.bind(this);\r\n\r\n    this.state = {\r\n      currentLocation: {\r\n        location_id: null,\r\n        location_name: \"\",\r\n\r\n        submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocation(this.props.match.params.location_id);\r\n  }\r\n\r\n  onChangeLocationName(e) {\r\n    const location_name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentLocation: {\r\n          ...prevState.currentLocation,\r\n          location_name: location_name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getLocation(location_id) {\r\n    LocationDataService.get(location_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentLocation: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateLocation() {\r\n    LocationDataService.update(\r\n      this.state.currentLocation.location_id,\r\n      this.state.currentLocation\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The Location was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteLocation() {    \r\n    LocationDataService.delete(this.state.currentLocation.location_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Locations')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentLocation } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentLocation ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Location</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"location_name\">Location Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"location_name\"\r\n                  value={currentLocation.location_name}\r\n                  onChange={this.onChangeLocationName}\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteLocation}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateLocation}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Location...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../../services/location.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class LocationsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveLocations = this.retrieveLocations.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveLocation = this.setActiveLocation.bind(this);\r\n\r\n    this.state = {\r\n      locations: [],\r\n      currentLocationl: null,\r\n      currentIndex: -1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveLocations();\r\n  }\r\n\r\n  retrieveLocations() {\r\n    LocationDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          locations: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveLocations();\r\n    this.setState({\r\n      currentLocation: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveLocation(location, index) {\r\n    this.setState({\r\n      currentLocation: location,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { locations, currentLocation, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Locations List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {locations &&\r\n              locations.map((location, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveLocation(location, index)}\r\n                  key={index}\r\n                >\r\n                  {location.location_name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentLocation ? (\r\n            <div>\r\n              <h4>Location</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Location Name:</strong>\r\n                </label>{\" \"}\r\n                {currentLocation.location_name}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/locations/\" + currentLocation.location_id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Location...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\n\r\nclass PlayerDataService {\r\n  getAll() {\r\n    return http.get(\"/players\");\r\n  }\r\n\r\n  get(player_id) {\r\n    return http.get(`/players/${player_id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/players\", data);\r\n  }\r\n\r\n  update(player_id, data) {\r\n    return http.put(`/players/${player_id}`, data);\r\n  }\r\n\r\n  delete(player_id) {\r\n    return http.delete(`/players/${player_id}`);\r\n  }\r\n}\r\n\r\nexport default new PlayerDataService();","import React, { Component } from \"react\";\r\nimport PlayerDataService from \"../../services/player.service\";\r\n\r\nexport default class AddPlayer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangePlayerName = this.onChangePlayerName.bind(this);\r\n    this.onChangePlayerRank = this.onChangePlayerRank.bind(this);\r\n    this.onChangeDiscordId = this.onChangeDiscordId.bind(this);\r\n    this.onChangeUserId = this.onChangeUserId.bind(this);\r\n    this.savePlayer = this.savePlayer.bind(this);\r\n    this.newPlayer = this.newPlayer.bind(this);\r\n\r\n    this.state = {\r\n      player_id: null,\r\n      player_rank: \"\",\r\n      player_name: \"\",\r\n      discord_id: \"\",\r\n      user_id: null,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangePlayerName(e) {\r\n    this.setState({\r\n      player_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePlayerRank(e) {\r\n    this.setState({\r\n      player_rank: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscordId(e) {\r\n    this.setState({\r\n      discord_id: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUserId(e) {\r\n    this.setState({\r\n      user_id: e.target.value\r\n    });\r\n  }\r\n\r\n  savePlayer() {\r\n    var data = {\r\n      player_rank: this.state.player_rank,\r\n      player_name: this.state.player_name,\r\n      discord_id: this.state.discord_id,\r\n      user_id: this.state.user_id\r\n    };\r\n\r\n    PlayerDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          player_id: response.data.player_id,\r\n          player_rank: response.data.player_rank,\r\n          player_name: response.data.player_name,\r\n          discord_id: response.data.discord_id,\r\n          user_id: response.data.user_id,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newPlayer() {\r\n    this.setState({\r\n      player_id: null,\r\n      player_rank: \"\",\r\n      player_name: \"\",\r\n      discord_id: \"\",\r\n      user_id: null,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPlayer}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"player_name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"player_name\"\r\n                required\r\n                value={this.state.player_name}\r\n                onChange={this.onChangePlayerName}\r\n                name=\"player_name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"player_rank\">Rank</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"player_rank\"\r\n                required\r\n                value={this.state.player_rank}\r\n                onChange={this.onChangePlayerRank}\r\n                name=\"player_rank\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discord_id\">Discord ID</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discord_id\"\r\n                required\r\n                value={this.state.discord_id}\r\n                onChange={this.onChangeDiscordId}\r\n                name=\"discord_id\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"user_id\">User</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"user_id\"\r\n                required\r\n                value={this.state.user_id}\r\n                onChange={this.onChangeUserId}\r\n                name=\"user_id\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.savePlayer} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PlayerDataService from \"../../services/player.service\";\r\n\r\nexport default class Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangePlayerName = this.onChangePlayerName.bind(this);\r\n    this.onChangePlayerRank = this.onChangePlayerRank.bind(this);\r\n    this.onChangeDiscordId = this.onChangeDiscordId.bind(this);\r\n    this.onChangeUserId = this.onChangeUserId.bind(this);\r\n    this.getPlayer = this.getPlayer.bind(this);\r\n    this.updatePlayer = this.updatePlayer.bind(this);\r\n    this.deletePlayer = this.deletePlayer.bind(this);\r\n\r\n    this.state = {\r\n      currentPlayer: {\r\n      player_id: null,\r\n      player_rank: \"\",\r\n      player_name: \"\",\r\n      discord_id: \"\",\r\n      user_id: null,\r\n\r\n      submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPlayer(this.props.match.params.player_id);\r\n  }\r\n\r\n  onChangePlayerName(e) {\r\n    const player_name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPlayer: {\r\n          ...prevState.currentPlayer,\r\n          player_name: player_name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePlayerRank(e) {\r\n    const player_rank = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPlayer: {\r\n          ...prevState.currentPlayer,\r\n          player_rank: player_rank\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDiscordId(e) {\r\n    const discord_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPlayer: {\r\n          ...prevState.currentPlayer,\r\n          discord_id: discord_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeUserId(e) {\r\n    const user_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPlayer: {\r\n          ...prevState.currentPlayer,\r\n          user_id: user_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getPlayer(player_id) {\r\n    PlayerDataService.get(player_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentPlayer: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePlayer() {\r\n    PlayerDataService.update(\r\n      this.state.currentPlayer.player_id,\r\n      this.state.currentPlayer\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The Player was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePlayer() {    \r\n    PlayerDataService.delete(this.state.currentPlayer.player_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Players')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentPlayer } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentPlayer ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Player</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"player_name\">Player Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"player_name\"\r\n                  value={currentPlayer.player_name}\r\n                  onChange={this.onChangePlayerName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"player_rank\">Player Rank</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"player_rank\"\r\n                  value={currentPlayer.player_rank}\r\n                  onChange={this.onChangePlayerRank}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"discord_id\">Discord ID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"discord_id\"\r\n                  value={currentPlayer.discord_id}\r\n                  onChange={this.onChangeDiscordId}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"user_id\">User</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"user_id\"\r\n                  value={currentPlayer.user_id}\r\n                  onChange={this.onChangeUserId}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deletePlayer}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updatePlayer}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Player...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PlayerDataService from \"../../services/player.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class PlayersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrievePlayers = this.retrievePlayers.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActivePlayer = this.setActivePlayer.bind(this);\r\n\r\n    this.state = {\r\n      players: [],\r\n      currentPlayerl: null,\r\n      currentIndex: -1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrievePlayers();\r\n  }\r\n\r\n  retrievePlayers() {\r\n    PlayerDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          players: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrievePlayers();\r\n    this.setState({\r\n      currentPlayer: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActivePlayer(player, index) {\r\n    this.setState({\r\n      currentPlayer: player,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { players, currentPlayer, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Players List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {players &&\r\n              players.map((player, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActivePlayer(player, index)}\r\n                  key={index}\r\n                >\r\n                  {player.player_name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentPlayer ? (\r\n            <div>\r\n              <h4>Player</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Player Name:</strong>\r\n                </label>{\" \"}\r\n                {currentPlayer.player_name}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Player Rank:</strong>\r\n                </label>{\" \"}\r\n                {currentPlayer.player_rank}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Discord ID:</strong>\r\n                </label>{\" \"}\r\n                {currentPlayer.discord_id}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/players/\" + currentPlayer.player_id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Player...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\n\r\nclass CharacterDataService {\r\n  getAll() {\r\n    return http.get(\"/characters\");\r\n  }\r\n\r\n  get(character_id) {\r\n    return http.get(`/characters/${character_id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/characters\", data);\r\n  }\r\n\r\n  update(character_id, data) {\r\n    return http.put(`/characters/${character_id}`, data);\r\n  }\r\n\r\n  delete(character_id) {\r\n    return http.delete(`/characters/${character_id}`);\r\n  }\r\n\r\n  findCharactersByPlayer(player_id) {\r\n    return http.get(`/characters?player_id=${player_id}`);\r\n  }\r\n}\r\n\r\nexport default new CharacterDataService();","import React, { Component } from \"react\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\n\r\nexport default class AddCharacter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\r\n    this.onChangeCharacterClass = this.onChangeCharacterClass.bind(this);\r\n    this.onChangeLevel = this.onChangeLevel.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeStatArray = this.onChangeStatArray.bind(this);\r\n    this.onChangeLocationId = this.onChangeLocationId.bind(this);\r\n    this.onChangePlayerId = this.onChangePlayerId.bind(this);\r\n    this.saveCharacter = this.saveCharacter.bind(this);\r\n    this.newCharacter = this.newCharacter.bind(this);\r\n\r\n    this.state = {\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: null,\r\n      status: \"\",\r\n      stat_array: \"\",\r\n      player_id: null,\r\n      location_id: null,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeCharacterName(e) {\r\n    this.setState({\r\n      character_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCharacterClass(e) {\r\n    this.setState({\r\n      character_class: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLevel(e) {\r\n    this.setState({\r\n      level: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStatus(e) {\r\n    this.setState({\r\n      status: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStatArray(e) {\r\n    this.setState({\r\n      stat_array: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLocationId(e) {\r\n    this.setState({\r\n      location_id: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePlayerId(e) {\r\n    this.setState({\r\n      player_id: e.target.value\r\n    });\r\n  }\r\n\r\n  saveCharacter() {\r\n    var data = {\r\n      character_name: this.state.character_name,\r\n      character_class: this.state.character_class,\r\n      level: this.state.level,\r\n      status: this.state.status,\r\n      stat_array: this.state.stat_array,\r\n      location_id: this.state.location_id,\r\n      player_id: this.state.player_id\r\n    };\r\n\r\n    CharacterDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          character_id: response.data.character_id,\r\n          character_name: response.data.character_name,\r\n          character_class: response.data.character_class,\r\n          level: response.data.level,\r\n          status: response.data.status,\r\n          stat_array: response.data.stat_array,\r\n          location_id: response.data.location_id,\r\n          player_id: response.data.player_id,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newCharacter() {\r\n    this.setState({\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: null,\r\n      status: \"\",\r\n      stat_array: \"\",\r\n      player_id: null,\r\n      location_id: null,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newCharacter}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"character_name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"character_name\"\r\n                required\r\n                value={this.state.character_name}\r\n                onChange={this.onChangeCharacterName}\r\n                name=\"character_name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"character_class\">Class</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"character_class\"\r\n                required\r\n                value={this.state.character_class}\r\n                onChange={this.onChangeCharacterClass}\r\n                name=\"character_class\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"level\">Level</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"level\"\r\n                required\r\n                value={this.state.level}\r\n                onChange={this.onChangeLevel}\r\n                name=\"level\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"status\">Status</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"status\"\r\n                required\r\n                value={this.state.status}\r\n                onChange={this.onChangeStatus}\r\n                name=\"status\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"stat_array\">Stat Array</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"stat_array\"\r\n                required\r\n                value={this.state.stat_array}\r\n                onChange={this.onChangeStatArray}\r\n                name=\"stat_array\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"player_id\">Player</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"player_id\"\r\n                required\r\n                value={this.state.player_id}\r\n                onChange={this.onChangePlayerId}\r\n                name=\"player_id\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"location_id\">Location</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"location_id\"\r\n                required\r\n                value={this.state.location_id}\r\n                onChange={this.onChangeLocationId}\r\n                name=\"location_id\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveCharacter} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\n\r\nexport default class Character extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeCharacterName = this.onChangeCharacterName.bind(this);\r\n    this.onChangeCharacterClass = this.onChangeCharacterClass.bind(this);\r\n    this.onChangeLevel = this.onChangeLevel.bind(this);\r\n    this.onChangerStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeStatArray = this.onChangeStatArray.bind(this);\r\n    this.onChangeLocationId = this.onChangeLocationId.bind(this);\r\n    this.onChangePlayerId = this.onChangePlayerId.bind(this);\r\n    this.getCharacter = this.getCharacter.bind(this);\r\n    this.updateCharacter = this.updateCharacter.bind(this);\r\n    this.deleteCharacter = this.deleteCharacter.bind(this);\r\n\r\n    this.state = {\r\n      currentCharacter: {\r\n      character_id: null,\r\n      character_name: \"\",\r\n      character_class: \"\",\r\n      level: null,\r\n      status: \"\",\r\n      stat_array: \"\",\r\n      player_id: null,\r\n      location_id: null,\r\n\r\n      submitted: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCharacter(this.props.match.params.character_id);\r\n  }\r\n\r\n  onChangeCharacterName(e) {\r\n    const character_name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          character_name: character_name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeCharacterClass(e) {\r\n    const character_class = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          character_class: character_class\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeLevel(e) {\r\n    const level = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          level: level\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeStatus(e) {\r\n    const status = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          status: status\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeStatArray(e) {\r\n    const stat_array = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          stat_array: stat_array\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeLocationId(e) {\r\n    const location_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          location_id: location_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePlayerId(e) {\r\n    const player_id = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentCharacter: {\r\n          ...prevState.currentCharacter,\r\n          player_id: player_id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  getCharacter(character_id) {\r\n    CharacterDataService.get(character_id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentCharacter: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateCharacter() {\r\n    CharacterDataService.update(\r\n      this.state.currentCharacter.character_id,\r\n      this.state.currentCharacter\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The Character was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteCharacter() {    \r\n    CharacterDataService.delete(this.state.currentCharacter.character_id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/Characters')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentCharacter } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentCharacter ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Character</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"character_name\">Character Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"character_name\"\r\n                  value={currentCharacter.character_name}\r\n                  onChange={this.onChangeCharacterName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"character_class\">Character Class</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"character_class\"\r\n                  value={currentCharacter.character_class}\r\n                  onChange={this.onChangeCharacterClass}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"level\">Level</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"level\"\r\n                  value={currentCharacter.level}\r\n                  onChange={this.onChangeLevel}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"status\">Status</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"status\"\r\n                  value={currentCharacter.status}\r\n                  onChange={this.onChangeStatus}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"stat_array\">Stat Array</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"stat_array\"\r\n                  value={currentCharacter.stat_array}\r\n                  onChange={this.onChangeStatArray}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"location_id\">Location</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"location_id\"\r\n                  value={currentCharacter.location_id}\r\n                  onChange={this.onChangeLocationId}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"palyer_id\">Player</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"player_id\"\r\n                  value={currentCharacter.player_id}\r\n                  onChange={this.onChangePlayerId}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteCharacter}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateCharacter}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Character...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport CharacterDataService from \"../../services/character.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class CharactersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchPlayerName = this.onChangeSearchPlayerName.bind(this);\r\n    this.retrieveCharacters = this.retrieveCharacters.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveCharacter = this.setActiveCharacter.bind(this);\r\n    this.searchPlayerName = this.searchPlayerName.bind(this);\r\n\r\n    this.state = {\r\n      characters: [],\r\n      currentCharacterl: null,\r\n      currentIndex: -1,\r\n      searchPlayerName: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveCharacters();\r\n  }\r\n\r\n  onChangeSearchPlayerName(e) {\r\n    const searchPlayerName = e.target.value;\r\n\r\n    this.setState({\r\n      searchPlayerName: searchPlayerName\r\n    });\r\n  }\r\n\r\n  retrieveCharacters() {\r\n    CharacterDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          characters: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveCharacters();\r\n    this.setState({\r\n      currentCharacter: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveCharacter(character, index) {\r\n    this.setState({\r\n      currentCharacter: character,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  searchPlayerName() {\r\n    CharacterDataService.findByPlayerName(this.state.searchPlayerName)\r\n      .then(response => {\r\n        this.setState({\r\n          characters: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchPlayerName, characters, currentCharacter, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by PlayerName\"\r\n              value={searchPlayerName}\r\n              onChange={this.onChangeSearchPlayerName}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchPlayerName}\r\n              >\r\n                Search by Player\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Characters List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {characters &&\r\n              characters.map((character, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveCharacter(character, index)}\r\n                  key={index}\r\n                >\r\n                  {character.character_name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentCharacter ? (\r\n            <div>\r\n              <h4>Character</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Character Name:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.character_name}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Player Name:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.player_id}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Character Class:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.character_class}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Level:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.level}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.status}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Stat Array:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.stat_array}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Location:</strong>\r\n                </label>{\" \"}\r\n                {currentCharacter.location_id}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/characters/\" + currentCharacter.character_id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Character...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AddLocation from \"./components/locations/add-location.component\";\r\nimport Location from \"./components/locations/location.component\";\r\nimport LocationsList from \"./components/locations/locations-list.component\";\r\nimport AddPlayer from \"./components/players/add-player.component\";\r\nimport Player from \"./components/players/player.component\";\r\nimport PlayersList from \"./components/players/players-list.component\";\r\nimport AddCharacter from \"./components/characters/add-character.component\";\r\nimport Character from \"./components/characters/character.component\";\r\nimport CharactersList from \"./components/characters/characters-list.component\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <a href=\"/characters\" className=\"navbar-brand\">\r\n            The Commonwealth\r\n          </a>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/locations\"} className=\"nav-link\">\r\n                Locations\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/addLocation\"} className=\"nav-link\">\r\n                Add Location\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/characters\"} className=\"nav-link\">\r\n                Characters\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/addCharacter\"} className=\"nav-link\">\r\n                Add Character\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/players\"} className=\"nav-link\">\r\n                Players\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/addPlayer\"} className=\"nav-link\">\r\n                Add Player\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/characters\"]} component={CharactersList} />\r\n            <Route exact path=\"/addLocation\" component={AddLocation} />\r\n            <Route path=\"/locations/:location_id\" component={Location} />\r\n            <Route exact path={[\"/\", \"/locations\"]} component={LocationsList} />\r\n            <Route exact path=\"/addCharacter\" component={AddCharacter} />\r\n            <Route path=\"/characters/:character_id\" component={Character} />\r\n            <Route exact path={[\"/\", \"/players\"]} component={PlayersList} />\r\n            <Route exact path=\"/addPlayer\" component={AddPlayer} />\r\n            <Route path=\"/players/:player_id\" component={Player} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n//import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n//serviceWorker.unregister();"],"sourceRoot":""}